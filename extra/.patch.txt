kubectl get ds fluentd -n kube-logging -o yaml

kubectl get pods --all-namespaces | grep fluent

# patch ds container image name

kubectl patch ds fluentd -n kube-logging -p '{"spec":{"template":{"spec":{"containers":[{"name":"fluentd","image":"ibmcom/fluentd-amd64:v1.2.2-icp"}]}}}}'

kubectl patch ds fluentd -n kube-logging -p '{"spec":{"template":{"spec":{"containers":[{"name":"fluentd","image":"fluent/fluentd-kubernetes-daemonset:v1.4.2-debian-elasticsearch-1.1"}]}}}}'


# patch pod container image name

kubectl get pods fluentd-4wr7p -n kube-logging -o=jsonpath="{.spec.containers[:1].image}"

kubectl patch pod fluentd-4wr7p -n kube-logging -p '{"spec":{"containers":[{"name":"fluentd","image":"fluent/fluentd-kubernetes-daemonset:v1.4.2-debian-elasticsearch-1.1"}]}}'


# 

kubectl get pods --all-namespaces -o=jsonpath="{..image}"

kubectl get pods --all-namespaces -o jsonpath="{..image}" |\
tr -s '[[:space:]]' '\n' |\
sort |\
uniq -c


kubectl get -o jsonpath="{.spec.ports[0].nodePort}" services nodeport

# Partially update a node
kubectl patch node k8s-node-1 -p '{"spec":{"unschedulable":true}}'

# Update a container's image; spec.containers[*].name is required because it's a merge key
kubectl patch pod valid-pod -p '{"spec":{"containers":[{"name":"kubernetes-serve-hostname","image":"new image"}]}}'

# Update a container's image using a json patch with positional arrays
kubectl patch pod valid-pod --type='json' -p='[{"op": "replace", "path": "/spec/containers/0/image", "value":"new image"}]'

# Disable a deployment livenessProbe using a json patch with positional arrays
kubectl patch deployment valid-deployment  --type json   -p='[{"op": "remove", "path": "/spec/template/spec/containers/0/livenessProbe"}]'

# Add a new element to a positional array
kubectl patch sa default --type='json' -p='[{"op": "add", "path": "/secrets/1", "value": {"name": "whatever" } }]'