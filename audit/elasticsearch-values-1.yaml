appVersion: 6.8.6
chownInitContainer:
  enabled: true
client:
  antiAffinity: soft
  heapSize: 512m
  hooks: {}
  ingress:
    annotations: {}
    enabled: false
    hosts:
    - chart-example.local
    path: /
    tls: []
  initResources: {}
  loadBalancerIP: {}
  loadBalancerSourceRanges: {}
  name: client
  nodeAffinity: {}
  nodeSelector: {}
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  priorityClassName: ""
  replicas: 2
  resources:
    limits:
      cpu: "1"
    requests:
      cpu: 25m
      memory: 512Mi
  serviceType: ClusterIP
  tolerations: []
cluster:
  additionalJavaOpts: ""
  bootstrapShellCommand: ""
  config: {}
  env:
    MINIMUM_MASTER_NODES: "2"
  log4j2Properties: |
    status = error
    appender.console.type = Console
    appender.console.name = console
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] %marker%m%n
    rootLogger.level = info
    rootLogger.appenderRef.console.ref = console
    logger.searchguard.name = com.floragunn
    logger.searchguard.level = info
  loggingYml:
    appender:
      console:
        layout:
          conversionPattern: '[%d{ISO8601}][%-5p][%-25c] %m%n'
          type: consolePattern
        type: console
    es.logger.level: INFO
    logger:
      action: DEBUG
      com.amazonaws: WARN
    rootLogger: ${es.logger.level}, console
  name: elasticsearch
  plugins: []
  xpackEnable: false
data:
  antiAffinity: soft
  exposeHttp: false
  heapSize: 1536m
  hooks:
    drain:
      enabled: true
  initResources: {}
  name: data
  nodeAffinity: {}
  nodeSelector: {}
  persistence:
    accessMode: ReadWriteOnce
    enabled: false
    name: data
    size: 30Gi
  podDisruptionBudget:
    enabled: false
    maxUnavailable: 1
  podManagementPolicy: OrderedReady
  priorityClassName: ""
  readinessProbe:
    httpGet:
      path: /_cluster/health?local=true
      port: 9200
    initialDelaySeconds: 5
  replicas: 2
  resources:
    limits:
      cpu: "1"
    requests:
      cpu: 25m
      memory: 1536Mi
  terminationGracePeriodSeconds: 3600
  tolerations: []
  updateStrategy:
    type: OnDelete
extraInitContainers: ""
forceIpv6: false
image:
  pullPolicy: IfNotPresent
  repository: docker.elastic.co/elasticsearch/elasticsearch-oss
  tag: 6.8.6
initImage:
  pullPolicy: Always
  repository: busybox
  tag: latest
master:
  antiAffinity: soft
  exposeHttp: false
  heapSize: 512m
  hooks: {}
  initResources: {}
  name: master
  nodeAffinity: {}
  nodeSelector: {}
  persistence:
    accessMode: ReadWriteOnce
    enabled: false
    name: data
    size: 4Gi
  podDisruptionBudget:
    enabled: false
    minAvailable: 2
  podManagementPolicy: OrderedReady
  priorityClassName: ""
  readinessProbe:
    httpGet:
      path: /_cluster/health?local=true
      port: 9200
    initialDelaySeconds: 5
  replicas: 3
  resources:
    limits:
      cpu: "1"
    requests:
      cpu: 25m
      memory: 512Mi
  tolerations: []
  updateStrategy:
    type: OnDelete
podSecurityPolicy:
  annotations: {}
  enabled: false
securityContext:
  enabled: false
  runAsUser: 1000
serviceAccounts:
  client:
    create: true
    name: null
  data:
    create: true
    name: null
  master:
    create: true
    name: null
sysctlInitContainer:
  enabled: true
testFramework:
  image: dduportal/bats
  tag: 0.4.0
